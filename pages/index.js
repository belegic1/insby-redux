import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { connect } from "react-redux"
import { setToken } from '../redux/token/token.actions'
import {useEffect} from "react"
import { setMenu } from '../redux/menu/menu.actions'
import Link from 'next/link'
import { selectMenuItems } from '../redux/menu/menu.select'

function Home({  token, setToken, menu,setMenu }) {

  useEffect(() => {

    const auth = "Basic " + new Buffer(`${process.env.USERNAME}:${process.env.PASSWORD}`).toString("base64")
 
    const raw = { "uuid": "04b9a5fd-38ce-436e-873b-f28c4e847426", "uuidOS": "Linux" };

    const requestOptions = {
      method: 'POST',

      body: JSON.stringify(raw),
      redirect: 'follow',
      headers: {
        "Authorization": auth,
        'Content-Type': 'application/json'
      },
    };

    fetch("https://dev-mrp.insby.tech/api/init/app", requestOptions)
      .then(response => response.json())
      .then(result => setToken(result.data.token))
      .catch(error => console.log('error', error));
  }, [])
  

  function fetchMenu() {
    if (token) {

      const requestOptions = {
        method: 'GET',
        redirect: 'follow',
        headers: {
          "Authorization": `Bearer ${token}`,
          'Content-Type': 'application/json'
        },
      };

      fetch("https://dev-mrp.insby.tech/api/session/restaurant/menu", requestOptions)
        .then(response => response.json())
        .then(result => {
          console.log(result.data);
          setMenu(result.data)
        })
        .catch(error => console.log('error', error));
    }
  }

  useEffect(() => {
    if (token) {
      fetchMenu()
    } 
  }, [token])
  

  if (!menu || !token) {
    return <h1>Loading...</h1>
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        {menu?.map(item => (
          <div key={item.category_id}>
            <h3 className={styles.category_name}>{item.category_name}</h3>
            <ul>
              {item.items.map(i => (
                <li className={styles.list} key={i.rmci_id}>
                  <Image className={styles.food_image} width={150} height={150} src={`https://files.insby.tech/tap-dev-4/${i.product_variant_image_url}`} alt={i.product_variant_name} />
                  <p className={styles.food_name}>{i.product_variant_name}</p>
                  <p className={styles.food_price} >{i.product_variant_price.display_price}</p>
                </li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </div>
  )
}


const mapStateToProps = (state) => ({
  token: state.token.token,
  menu: selectMenuItems(state)
})

const mapDispatchToProps = dispatch => ({
  setToken: token => dispatch(setToken(token)),
  setMenu: menu => dispatch(setMenu(menu))
})

export default connect(mapStateToProps,mapDispatchToProps)(Home)